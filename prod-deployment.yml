name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for deployment'
        required: true
        default: 'Scheduled release'

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    environment: 
      name: prod
      url: https://myapp.com
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-app
          IMAGE_TAG: prod-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Deploy to Production
        run: ./scripts/deploy-to-ecs.sh prod
        env:
          CLUSTER_NAME: my-app-prod
          SERVICE_NAME: my-app-service-prod
          TASK_DEFINITION: my-app-task-prod
          
      - name: Update master branch
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout master
          git merge --no-ff release -m "Release ${{ github.sha }}"
          git push origin master